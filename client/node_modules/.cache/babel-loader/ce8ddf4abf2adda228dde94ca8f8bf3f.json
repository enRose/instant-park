{"ast":null,"code":"var _jsxFileName = \"/Users/YiniY/Projects/rm/instant-park/client/src/signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { Form, Button, Container, Row, Col, InputGroup } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { axios } from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  });\n  const schema = yup.object().shape({\n    firstName: yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n    lastName: yup.string().required('Required'),\n    email: yup.string().required('Required'),\n    password: yup.string().required('Required'),\n    terms: yup.bool().required().oneOf([true], 'Terms must be accepted')\n  });\n\n  const register = user => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    };\n    return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          validationSchema: schema,\n          onSubmit: async values => {\n            register(values);\n            alert(JSON.stringify(values, null, 2));\n          },\n          initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            terms: false\n          },\n          children: ({\n            isSubmitting,\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationFormik01\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"firstName\",\n                value: values.firstName,\n                onChange: handleChange,\n                isInvalid: touched.firstName && !!errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationFormik02\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"lastName\",\n                value: values.lastName,\n                onChange: handleChange,\n                isInvalid: touched.lastName && !!errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationFormikEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"inputGroupPrepend\",\n                    children: \"@\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Email\",\n                  \"aria-describedby\": \"inputGroupPrepend\",\n                  name: \"email\",\n                  value: values.email,\n                  onChange: handleChange,\n                  isInvalid: !!errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationFormikPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                value: values.password,\n                placeholder: \"Password\",\n                onChange: handleChange,\n                isInvalid: touched.password && !!errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                required: true,\n                name: \"terms\",\n                label: \"Agree to terms and conditions\",\n                onChange: handleChange,\n                isInvalid: !!errors.terms,\n                feedback: errors.terms,\n                id: \"validationFormikTerms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Signup, \"N3ibZT4vqCrY5yt+sRVADjRLFyE=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/YiniY/Projects/rm/instant-park/client/src/signup.js"],"names":["React","useState","useEffect","Link","Formik","Form","Button","Container","Row","Col","InputGroup","yup","axios","Signup","user","setUser","firstName","lastName","email","password","schema","object","shape","string","min","max","required","terms","bool","oneOf","register","requestOptions","method","headers","body","JSON","stringify","fetch","config","apiUrl","then","handleResponse","values","alert","isSubmitting","handleSubmit","handleChange","handleBlur","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { Form, Button, Container, Row, Col, InputGroup } from 'react-bootstrap'\nimport * as yup from 'yup'\nimport {axios} from 'axios'\n\nconst Signup = () => {\n\tconst [user, setUser] = useState({\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\tpassword: ''\n\t})\n\n\tconst schema = yup.object().shape({\n\t\tfirstName: yup.string()\n\t\t\t.min(2, 'Too Short!')\n\t\t\t.max(50, 'Too Long!')\n\t\t\t.required('Required'),\n\t\tlastName: yup.string().required('Required'),\n\t\temail: yup.string().required('Required'),\n\t\tpassword: yup.string().required('Required'),\n\t\tterms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\n\t})\n\n\tconst register = (user) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n}\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tvalidationSchema={schema}\n\t\t\t\t\t\tonSubmit={async (values) => {\n\t\t\t\t\t\t\tregister(values)\n\t\t\t\t\t\t\talert(JSON.stringify(values, null, 2))\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\tfirstName: '',\n\t\t\t\t\t\t\tlastName: '',\n\t\t\t\t\t\t\temail: '',\n\t\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\t\tterms: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({\n\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\tisValid,\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<Form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormik01\">\n\t\t\t\t\t\t\t\t\t<Form.Label>First name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={touched.firstName && !!errors.firstName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormik02\">\n\t\t\t\t\t\t\t\t\t<Form.Label>Last name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={touched.lastName && !!errors.lastName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormikEmail\">\n\t\t\t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t\t\t\t\t<InputGroup hasValidation>\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"inputGroupPrepend\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tisInvalid={!!errors.email}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t\t\t\t{errors.email}\n\t\t\t\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormikPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={touched.password && !!errors.password}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tname=\"terms\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Agree to terms and conditions\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={!!errors.terms}\n\t\t\t\t\t\t\t\t\t\tfeedback={errors.terms}\n\t\t\t\t\t\t\t\t\t\tid=\"validationFormikTerms\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" disabled={isSubmitting}>Sign up</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}