[{"/Users/YiniY/Projects/rm/instant-park/client/src/index.js":"1","/Users/YiniY/Projects/rm/instant-park/client/src/reportWebVitals.js":"2","/Users/YiniY/Projects/rm/instant-park/client/src/App.js":"3","/Users/YiniY/Projects/rm/instant-park/client/src/navigation/navigation.js":"4","/Users/YiniY/Projects/rm/instant-park/client/src/signup.js":"5"},{"size":708,"mtime":1624056876034,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1623035243039,"results":"8","hashOfConfig":"7"},{"size":119,"mtime":1624056885421,"results":"9","hashOfConfig":"7"},{"size":1809,"mtime":1624451074168,"results":"10","hashOfConfig":"7"},{"size":3844,"mtime":1624448332680,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16tcd1a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/YiniY/Projects/rm/instant-park/client/src/index.js",[],["24","25"],"/Users/YiniY/Projects/rm/instant-park/client/src/reportWebVitals.js",[],"/Users/YiniY/Projects/rm/instant-park/client/src/App.js",[],"/Users/YiniY/Projects/rm/instant-park/client/src/navigation/navigation.js",[],"/Users/YiniY/Projects/rm/instant-park/client/src/signup.js",["26","27","28"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Formik } from 'formik'\nimport { Form, Button, Container, Row, Col, InputGroup } from 'react-bootstrap'\nimport * as yup from 'yup'\n\nconst Signup = () => {\n\tconst history = useHistory()\n\n\tconst [user, setUser] = useState({\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\tpassword: ''\n\t})\n\n\tconst schema = yup.object().shape({\n\t\tfirstName: yup.string()\n\t\t\t.min(2, 'Too Short!')\n\t\t\t.max(50, 'Too Long!')\n\t\t\t.required('Required'),\n\t\tlastName: yup.string().required('Required'),\n\t\temail: yup.string().required('Required'),\n\t\tpassword: yup.string().required('Required'),\n\t})\n\n\tconst register = async (user) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { \n\t\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\t'Content-Type': 'application/json' \n\t\t\t\t},\n        body: JSON.stringify(user)\n    }\n\n    return await fetch(`http://localhost:4000/users/register`, requestOptions)\n\t}\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tvalidationSchema={schema}\n\t\t\t\t\t\tonSubmit={async (values) => {\n\t\t\t\t\t\t\tconst response = await register(values)\n\t\t\t\t\t\t\tconsole.log(String.fromCodePoint(0x1F408), JSON.stringify(response, null, 2))\n\t\t\t\t\t\t\tresponse.ok && history.push(\"/\")\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\tfirstName: '',\n\t\t\t\t\t\t\tlastName: '',\n\t\t\t\t\t\t\temail: '',\n\t\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\t\tterms: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({\n\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\tisValid,\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<Form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormik01\">\n\t\t\t\t\t\t\t\t\t<Form.Label>First name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={touched.firstName && !!errors.firstName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormik02\">\n\t\t\t\t\t\t\t\t\t<Form.Label>Last name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={touched.lastName && !!errors.lastName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormikEmail\">\n\t\t\t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t\t\t\t\t<InputGroup hasValidation>\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"inputGroupPrepend\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tisInvalid={!!errors.email}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t\t\t\t{errors.email}\n\t\t\t\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"validationFormikPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tisInvalid={touched.password && !!errors.password}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Button type=\"submit\" disabled={isSubmitting}>Sign up</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default Signup",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":27,"nodeType":"35","messageId":"36","endLine":1,"endColumn":36},{"ruleId":"33","severity":1,"message":"37","line":10,"column":9,"nodeType":"35","messageId":"36","endLine":10,"endColumn":13},{"ruleId":"33","severity":1,"message":"38","line":10,"column":15,"nodeType":"35","messageId":"36","endLine":10,"endColumn":22},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]